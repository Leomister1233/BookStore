//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnlineShoppingBookStore.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.BookStoreWebServiceSoap")]
    public interface BookStoreWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfoByCondition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetUserInfoByCondition(string username, string password, string phone, string gender, string email, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfoByCondition", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetUserInfoByConditionAsync(string username, string password, string phone, string gender, string email, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfoByUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetUserInfoByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfoByUsername", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetUserInfoByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfoByIdPassWord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetUserInfoByIdPassWord(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfoByIdPassWord", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetUserInfoByIdPassWordAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserOrderInfoByUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetUserOrderInfoByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserOrderInfoByUsername", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetUserOrderInfoByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserPassWordInfoReset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetUserPassWordInfoReset(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserPassWordInfoReset", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetUserPassWordInfoResetAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllUserInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetAllUserInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllUserInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetAllUserInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertUserInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertUserInfo(string username, string password, string phone, string gender, string email, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertUserInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertUserInfoAsync(string username, string password, string phone, string gender, string email, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteUserInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteUserInfo(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteUserInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteUserInfoAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUserInfoByUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateUserInfoByUsername(string username, string password, string phone, string gender, string email, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUserInfoByUsername", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateUserInfoByUsernameAsync(string username, string password, string phone, string gender, string email, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUserPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateUserPassword(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUserPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateUserPasswordAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertBookInfoById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertBookInfoById(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookSummary, string BookImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertBookInfoById", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertBookInfoByIdAsync(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookSummary, string BookImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateBookInfoById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateBookInfoById(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookSummary, string newBookImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateBookInfoById", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateBookInfoByIdAsync(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookSummary, string newBookImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateQuantityByBookId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateQuantityByBookId(string username, string BookId, string BookQuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateQuantityByBookId", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateQuantityByBookIdAsync(string username, string BookId, string BookQuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookInfoById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBookInfoById(string BookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookInfoById", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBookInfoByIdAsync(string BookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteBookInfoById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteBookInfoById(string BookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteBookInfoById", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteBookInfoByIdAsync(string BookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookInfoByCondition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBookInfoByCondition(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookSummary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookInfoByCondition", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBookInfoByConditionAsync(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookSummary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookInfoByConditionClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBookInfoByConditionClient(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookInfoByConditionClient", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBookInfoByConditionClientAsync(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookPhotoStringByStuNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBookPhotoStringByStuNo(string BookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookPhotoStringByStuNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBookPhotoStringByStuNoAsync(string BookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertBookCartInfoById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertBookCartInfoById(string username, string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookQuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertBookCartInfoById", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertBookCartInfoByIdAsync(string username, string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookQuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteBookCartInfoById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteBookCartInfoById(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteBookCartInfoById", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteBookCartInfoByIdAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteBookCartItemById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteBookCartItemById(string BookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteBookCartItemById", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteBookCartItemByIdAsync(string BookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookCartInfoById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBookCartInfoById(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookCartInfoById", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBookCartInfoByIdAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookPriceById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBookPriceById(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookPriceById", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBookPriceByIdAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookQuantityById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBookQuantityById(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookQuantityById", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBookQuantityByIdAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertPhotoInfoByUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertPhotoInfoByUsername(string username, string photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertPhotoInfoByUsername", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertPhotoInfoByUsernameAsync(string username, string photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProfilePhotobyUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetProfilePhotobyUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProfilePhotobyUsername", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetProfilePhotobyUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProfilePhotoByUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteProfilePhotoByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProfilePhotoByUsername", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteProfilePhotoByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProfilePhotoByUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateProfilePhotoByUsername(string username, string photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProfilePhotoByUsername", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateProfilePhotoByUsernameAsync(string username, string photo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BookStoreWebServiceSoapChannel : OnlineShoppingBookStore.ServiceReference1.BookStoreWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookStoreWebServiceSoapClient : System.ServiceModel.ClientBase<OnlineShoppingBookStore.ServiceReference1.BookStoreWebServiceSoap>, OnlineShoppingBookStore.ServiceReference1.BookStoreWebServiceSoap {
        
        public BookStoreWebServiceSoapClient() {
        }
        
        public BookStoreWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookStoreWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookStoreWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookStoreWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetUserInfoByCondition(string username, string password, string phone, string gender, string email, string address) {
            return base.Channel.GetUserInfoByCondition(username, password, phone, gender, email, address);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserInfoByConditionAsync(string username, string password, string phone, string gender, string email, string address) {
            return base.Channel.GetUserInfoByConditionAsync(username, password, phone, gender, email, address);
        }
        
        public string[] GetUserInfoByUsername(string username) {
            return base.Channel.GetUserInfoByUsername(username);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserInfoByUsernameAsync(string username) {
            return base.Channel.GetUserInfoByUsernameAsync(username);
        }
        
        public string[] GetUserInfoByIdPassWord(string username) {
            return base.Channel.GetUserInfoByIdPassWord(username);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserInfoByIdPassWordAsync(string username) {
            return base.Channel.GetUserInfoByIdPassWordAsync(username);
        }
        
        public string[] GetUserOrderInfoByUsername(string username) {
            return base.Channel.GetUserOrderInfoByUsername(username);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserOrderInfoByUsernameAsync(string username) {
            return base.Channel.GetUserOrderInfoByUsernameAsync(username);
        }
        
        public string[] GetUserPassWordInfoReset(string username) {
            return base.Channel.GetUserPassWordInfoReset(username);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserPassWordInfoResetAsync(string username) {
            return base.Channel.GetUserPassWordInfoResetAsync(username);
        }
        
        public string[] GetAllUserInfo() {
            return base.Channel.GetAllUserInfo();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllUserInfoAsync() {
            return base.Channel.GetAllUserInfoAsync();
        }
        
        public bool InsertUserInfo(string username, string password, string phone, string gender, string email, string address) {
            return base.Channel.InsertUserInfo(username, password, phone, gender, email, address);
        }
        
        public System.Threading.Tasks.Task<bool> InsertUserInfoAsync(string username, string password, string phone, string gender, string email, string address) {
            return base.Channel.InsertUserInfoAsync(username, password, phone, gender, email, address);
        }
        
        public bool DeleteUserInfo(string username) {
            return base.Channel.DeleteUserInfo(username);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserInfoAsync(string username) {
            return base.Channel.DeleteUserInfoAsync(username);
        }
        
        public bool UpdateUserInfoByUsername(string username, string password, string phone, string gender, string email, string address) {
            return base.Channel.UpdateUserInfoByUsername(username, password, phone, gender, email, address);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserInfoByUsernameAsync(string username, string password, string phone, string gender, string email, string address) {
            return base.Channel.UpdateUserInfoByUsernameAsync(username, password, phone, gender, email, address);
        }
        
        public bool UpdateUserPassword(string username, string password) {
            return base.Channel.UpdateUserPassword(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserPasswordAsync(string username, string password) {
            return base.Channel.UpdateUserPasswordAsync(username, password);
        }
        
        public bool InsertBookInfoById(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookSummary, string BookImage) {
            return base.Channel.InsertBookInfoById(BookId, BookName, BookCategory, BookAuthor, BookPrice, BookSummary, BookImage);
        }
        
        public System.Threading.Tasks.Task<bool> InsertBookInfoByIdAsync(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookSummary, string BookImage) {
            return base.Channel.InsertBookInfoByIdAsync(BookId, BookName, BookCategory, BookAuthor, BookPrice, BookSummary, BookImage);
        }
        
        public bool UpdateBookInfoById(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookSummary, string newBookImage) {
            return base.Channel.UpdateBookInfoById(BookId, BookName, BookCategory, BookAuthor, BookPrice, BookSummary, newBookImage);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateBookInfoByIdAsync(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookSummary, string newBookImage) {
            return base.Channel.UpdateBookInfoByIdAsync(BookId, BookName, BookCategory, BookAuthor, BookPrice, BookSummary, newBookImage);
        }
        
        public bool UpdateQuantityByBookId(string username, string BookId, string BookQuantity) {
            return base.Channel.UpdateQuantityByBookId(username, BookId, BookQuantity);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateQuantityByBookIdAsync(string username, string BookId, string BookQuantity) {
            return base.Channel.UpdateQuantityByBookIdAsync(username, BookId, BookQuantity);
        }
        
        public string[] GetBookInfoById(string BookId) {
            return base.Channel.GetBookInfoById(BookId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBookInfoByIdAsync(string BookId) {
            return base.Channel.GetBookInfoByIdAsync(BookId);
        }
        
        public bool DeleteBookInfoById(string BookId) {
            return base.Channel.DeleteBookInfoById(BookId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBookInfoByIdAsync(string BookId) {
            return base.Channel.DeleteBookInfoByIdAsync(BookId);
        }
        
        public string[] GetBookInfoByCondition(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookSummary) {
            return base.Channel.GetBookInfoByCondition(BookId, BookName, BookCategory, BookAuthor, BookPrice, BookSummary);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBookInfoByConditionAsync(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookSummary) {
            return base.Channel.GetBookInfoByConditionAsync(BookId, BookName, BookCategory, BookAuthor, BookPrice, BookSummary);
        }
        
        public string[] GetBookInfoByConditionClient(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice) {
            return base.Channel.GetBookInfoByConditionClient(BookId, BookName, BookCategory, BookAuthor, BookPrice);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBookInfoByConditionClientAsync(string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice) {
            return base.Channel.GetBookInfoByConditionClientAsync(BookId, BookName, BookCategory, BookAuthor, BookPrice);
        }
        
        public string[] GetBookPhotoStringByStuNo(string BookId) {
            return base.Channel.GetBookPhotoStringByStuNo(BookId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBookPhotoStringByStuNoAsync(string BookId) {
            return base.Channel.GetBookPhotoStringByStuNoAsync(BookId);
        }
        
        public bool InsertBookCartInfoById(string username, string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookQuantity) {
            return base.Channel.InsertBookCartInfoById(username, BookId, BookName, BookCategory, BookAuthor, BookPrice, BookQuantity);
        }
        
        public System.Threading.Tasks.Task<bool> InsertBookCartInfoByIdAsync(string username, string BookId, string BookName, string BookCategory, string BookAuthor, string BookPrice, string BookQuantity) {
            return base.Channel.InsertBookCartInfoByIdAsync(username, BookId, BookName, BookCategory, BookAuthor, BookPrice, BookQuantity);
        }
        
        public bool DeleteBookCartInfoById(string username) {
            return base.Channel.DeleteBookCartInfoById(username);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBookCartInfoByIdAsync(string username) {
            return base.Channel.DeleteBookCartInfoByIdAsync(username);
        }
        
        public bool DeleteBookCartItemById(string BookId) {
            return base.Channel.DeleteBookCartItemById(BookId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBookCartItemByIdAsync(string BookId) {
            return base.Channel.DeleteBookCartItemByIdAsync(BookId);
        }
        
        public string[] GetBookCartInfoById(string username) {
            return base.Channel.GetBookCartInfoById(username);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBookCartInfoByIdAsync(string username) {
            return base.Channel.GetBookCartInfoByIdAsync(username);
        }
        
        public string[] GetBookPriceById(string username) {
            return base.Channel.GetBookPriceById(username);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBookPriceByIdAsync(string username) {
            return base.Channel.GetBookPriceByIdAsync(username);
        }
        
        public string[] GetBookQuantityById(string username) {
            return base.Channel.GetBookQuantityById(username);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBookQuantityByIdAsync(string username) {
            return base.Channel.GetBookQuantityByIdAsync(username);
        }
        
        public bool InsertPhotoInfoByUsername(string username, string photo) {
            return base.Channel.InsertPhotoInfoByUsername(username, photo);
        }
        
        public System.Threading.Tasks.Task<bool> InsertPhotoInfoByUsernameAsync(string username, string photo) {
            return base.Channel.InsertPhotoInfoByUsernameAsync(username, photo);
        }
        
        public string[] GetProfilePhotobyUsername(string username) {
            return base.Channel.GetProfilePhotobyUsername(username);
        }
        
        public System.Threading.Tasks.Task<string[]> GetProfilePhotobyUsernameAsync(string username) {
            return base.Channel.GetProfilePhotobyUsernameAsync(username);
        }
        
        public bool DeleteProfilePhotoByUsername(string username) {
            return base.Channel.DeleteProfilePhotoByUsername(username);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProfilePhotoByUsernameAsync(string username) {
            return base.Channel.DeleteProfilePhotoByUsernameAsync(username);
        }
        
        public bool UpdateProfilePhotoByUsername(string username, string photo) {
            return base.Channel.UpdateProfilePhotoByUsername(username, photo);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProfilePhotoByUsernameAsync(string username, string photo) {
            return base.Channel.UpdateProfilePhotoByUsernameAsync(username, photo);
        }
    }
}
